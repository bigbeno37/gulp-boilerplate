body{background-color:#009ddc}.grid div{background-color:#fff}@media only screen and (min-width:400px) and (max-width:1050px){.title .grid:after,.title .grid:before{content:'';display:table}.title .grid{max-width:90%;margin-left:auto;margin-right:auto}.title .grid:after{clear:both}}@media only screen and (min-width:1050px){.title .grid:after,.title .grid:before{content:'';display:table}.title .grid{max-width:960px;margin-left:auto;margin-right:auto}.title .grid:after{clear:both}}.title .grid .heading{width:calc(99.99% * 1/1 - (30px - 30px * 1/1));text-align:center;padding:50px 0 0}.title .grid .heading:nth-child(n){float:left;margin-right:30px;clear:none}.title .grid .heading:last-child,.title .grid .heading:nth-child(1n){margin-right:0}.title .grid .heading:nth-child(1n+1){clear:left}
/*# sourceMappingURL=data:application/json;base64, */